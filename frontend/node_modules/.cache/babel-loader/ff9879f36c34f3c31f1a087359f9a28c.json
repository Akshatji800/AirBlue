{"ast":null,"code":"var _jsxFileName = \"/home/akshat/AirBlue/frontend/src/helpers/renderFormFileInput.js\";\nimport React from \"react\";\n\nconst handleChange = (event, input, onImageChange) => {\n  event.preventDefault();\n  let imageFile = event.target.files[0];\n\n  if (imageFile) {\n    if (/\\.(jpe?g|png)$/i.test(imageFile === null || imageFile === void 0 ? void 0 : imageFile.name) === false) {\n      input.onChange(null);\n      onImageChange(null);\n      alert(\"Please select image file only!\");\n    } else {\n      var fileSize = imageFile.size / 1024 / 1024; // in MB\n\n      if (fileSize > 5) {\n        alert(`Photo size must be less or equal to 5MB. Your photo size is ${fileSize}`);\n      } else {\n        input.onChange(imageFile);\n        onImageChange(imageFile);\n      }\n    }\n  } else {\n    input.onChange(null);\n    onImageChange(null);\n  }\n};\n\nconst renderFileInput = props => {\n  const {\n    input,\n    onImageChange,\n    tips,\n    meta: {\n      touched,\n      error,\n      warning\n    }\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-file form-file-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"formFile\",\n    className: \"form-file-input\",\n    id: input.name,\n    accept: \"image/x-png,image/jpeg\",\n    onChange: event => handleChange(event, input, onImageChange),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-file-label\",\n    htmlFor: input.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"form-file-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Choose file...\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"form-file-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Browse\")), tips && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 20\n    }\n  }, tips), touched && (error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 24\n    }\n  }, error) || warning && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 27\n    }\n  }, warning)))));\n};\n\nexport default renderFileInput;","map":{"version":3,"sources":["/home/akshat/AirBlue/frontend/src/helpers/renderFormFileInput.js"],"names":["React","handleChange","event","input","onImageChange","preventDefault","imageFile","target","files","test","name","onChange","alert","fileSize","size","renderFileInput","props","tips","meta","touched","error","warning"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nconst handleChange = (event, input, onImageChange) => {\n  event.preventDefault();\n  let imageFile = event.target.files[0];\n  if (imageFile) {\n    if (/\\.(jpe?g|png)$/i.test(imageFile?.name) === false) {\n      input.onChange(null);\n      onImageChange(null);\n      alert(\"Please select image file only!\");\n    } else {\n      var fileSize = imageFile.size / 1024 / 1024; // in MB\n      if (fileSize > 5) {\n        alert(`Photo size must be less or equal to 5MB. Your photo size is ${fileSize}`);\n      } else {\n        input.onChange(imageFile);\n        onImageChange(imageFile);\n      }\n    }\n  } else {\n    input.onChange(null);\n    onImageChange(null);\n  }\n};\n\nconst renderFileInput = (props) => {\n  const {\n    input,\n    onImageChange,\n    tips,\n    meta: { touched, error, warning },\n  } = props;\n  return (\n    <React.Fragment>\n      <div className=\"input-group mb-3\">\n        <div className=\"form-file form-file-sm\">\n          <input\n            type=\"file\"\n            name=\"formFile\"\n            className=\"form-file-input\"\n            id={input.name}\n            accept=\"image/x-png,image/jpeg\"\n            onChange={(event) => handleChange(event, input, onImageChange)}\n            required\n          />\n          <label className=\"form-file-label\" htmlFor={input.name}>\n            <span className=\"form-file-text\">Choose file...</span>\n            <span className=\"form-file-button\">Browse</span>\n          </label>\n          {tips && <div className=\"form-text\">{tips}</div>}\n          {touched &&\n            ((error && <div className=\"invalid-feedback\">{error}</div>) ||\n              (warning && <span>{warning}</span>))}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\nexport default renderFileInput;\n"]},"metadata":{},"sourceType":"module"}