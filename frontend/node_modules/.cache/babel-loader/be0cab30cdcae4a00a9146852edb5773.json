{"ast":null,"code":"var _jsxFileName = \"/home/akshat/AirBlue/frontend/src/helpers/renderFormSelect.js\";\nimport React from \"react\";\n\nconst renderSelectOptions = item => /*#__PURE__*/React.createElement(\"option\", {\n  key: item.value,\n  value: item.value,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 3\n  }\n}, item.label); //export default function renderFormSelect({\n\n\nconst renderFormSelect = props => {\n  const {\n    input,\n    label,\n    tips,\n    options,\n    required,\n    meta: {\n      touched,\n      error,\n      warning\n    }\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: `form-label ${required ? \"required\" : \"\"}`,\n    htmlFor: input.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, label), /*#__PURE__*/React.createElement(\"select\", Object.assign({}, input, props, {\n    id: input.name,\n    className: \"form-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), options === null || options === void 0 ? void 0 : options.map(renderSelectOptions)), tips && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }\n  }, tips), touched && (error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 20\n    }\n  }, error) || warning && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 23\n    }\n  }, warning)));\n};\n\nexport default renderFormSelect;","map":{"version":3,"sources":["/home/akshat/AirBlue/frontend/src/helpers/renderFormSelect.js"],"names":["React","renderSelectOptions","item","value","label","renderFormSelect","props","input","tips","options","required","meta","touched","error","warning","name","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,mBAAmB,GAAIC,IAAD,iBAC1B;AAAQ,EAAA,GAAG,EAAEA,IAAI,CAACC,KAAlB;AAAyB,EAAA,KAAK,EAAED,IAAI,CAACC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,IAAI,CAACE,KADR,CADF,C,CAKA;;;AACA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,QAAM;AACJC,IAAAA,KADI;AAEJH,IAAAA,KAFI;AAGJI,IAAAA,IAHI;AAIJC,IAAAA,OAJI;AAKJC,IAAAA,QALI;AAMJC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB;AANF,MAOFR,KAPJ;AAQA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAG,cAAaI,QAAQ,GAAG,UAAH,GAAgB,EAAG,EADtD;AAEE,IAAA,OAAO,EAAEH,KAAK,CAACQ,IAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGX,KAJH,CADF,eAOE,gDAAYG,KAAZ,EAAuBD,KAAvB;AAA8B,IAAA,EAAE,EAAEC,KAAK,CAACQ,IAAxC;AAA8C,IAAA,SAAS,EAAC,aAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGN,OADH,aACGA,OADH,uBACGA,OAAO,CAAEO,GAAT,CAAaf,mBAAb,CADH,CAPF,EAUGO,IAAI,iBAAI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BA,IAA5B,CAVX,EAWGI,OAAO,KACJC,KAAK,iBAAI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,KAAnC,CAAV,IACEC,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,OAAP,CAFR,CAXV,CADF;AAiBD,CA1BD;;AA2BA,eAAeT,gBAAf","sourcesContent":["import React from \"react\";\nconst renderSelectOptions = (item) => (\n  <option key={item.value} value={item.value}>\n    {item.label}\n  </option>\n);\n//export default function renderFormSelect({\nconst renderFormSelect = (props) => {\n  const {\n    input,\n    label,\n    tips,\n    options,\n    required,\n    meta: { touched, error, warning },\n  } = props;\n  return (\n    <React.Fragment>\n      <label\n        className={`form-label ${required ? \"required\" : \"\"}`}\n        htmlFor={input.name}\n      >\n        {label}\n      </label>\n      <select {...input} {...props} id={input.name} className=\"form-select\">\n        {options?.map(renderSelectOptions)}\n      </select>\n      {tips && <div className=\"form-text\">{tips}</div>}\n      {touched &&\n        ((error && <div className=\"invalid-feedback\">{error}</div>) ||\n          (warning && <span>{warning}</span>))}\n    </React.Fragment>\n  );\n};\nexport default renderFormSelect;\n"]},"metadata":{},"sourceType":"module"}