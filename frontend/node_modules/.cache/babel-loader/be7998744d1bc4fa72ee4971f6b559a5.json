{"ast":null,"code":"var _jsxFileName = \"/home/akshat/AirBlue/frontend/src/components/Paging.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nconst LEFT_PAGE = \"LEFT\";\nconst RIGHT_PAGE = \"RIGHT\";\n\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n};\n\nclass Paging extends Component {\n  constructor(props) {\n    super();\n\n    this.gotoPage = page => {\n      const {\n        onPageChanged = f => f\n      } = this.props;\n      const currentPage = Math.max(0, Math.min(page, this.totalPages));\n      const paginationData = {\n        currentPage,\n        totalPages: this.totalPages,\n        pageLimit: this.pageLimit,\n        totalRecords: this.totalRecords\n      };\n      this.setState({\n        currentPage\n      }, () => onPageChanged(paginationData));\n    };\n\n    this.handleClick = (page, evt) => {\n      evt.preventDefault();\n      this.gotoPage(page);\n    };\n\n    this.handleMoveLeft = evt => {\n      evt.preventDefault();\n      this.gotoPage(this.state.currentPage - this.pageNeighbours * 2 - 1);\n    };\n\n    this.handleMoveRight = evt => {\n      evt.preventDefault();\n      this.gotoPage(this.state.currentPage + this.pageNeighbours * 2 + 1);\n    };\n\n    this.fetchPageNumbers = () => {\n      const totalPages = this.totalPages;\n      const currentPage = this.state.currentPage;\n      const pageNeighbours = this.pageNeighbours;\n      const totalNumbers = this.pageNeighbours * 2 + 3;\n      const totalBlocks = totalNumbers + 2;\n\n      if (totalPages > totalBlocks) {\n        let pages = [];\n        const leftBound = currentPage - pageNeighbours;\n        const rightBound = currentPage + pageNeighbours;\n        const beforeLastPage = totalPages - 1;\n        const startPage = leftBound > 2 ? leftBound : 2;\n        const endPage = rightBound < beforeLastPage ? rightBound : beforeLastPage;\n        pages = range(startPage, endPage);\n        const pagesCount = pages.length;\n        const singleSpillOffset = totalNumbers - pagesCount - 1;\n        const leftSpill = startPage > 2;\n        const rightSpill = endPage < beforeLastPage;\n        const leftSpillPage = LEFT_PAGE;\n        const rightSpillPage = RIGHT_PAGE;\n\n        if (leftSpill && !rightSpill) {\n          const extraPages = range(startPage - singleSpillOffset, startPage - 1);\n          pages = [leftSpillPage, ...extraPages, ...pages];\n        } else if (!leftSpill && rightSpill) {\n          const extraPages = range(endPage + 1, endPage + singleSpillOffset);\n          pages = [...pages, ...extraPages, rightSpillPage];\n        } else if (leftSpill && rightSpill) {\n          pages = [leftSpillPage, ...pages, rightSpillPage];\n        }\n\n        return [1, ...pages, totalPages];\n      }\n\n      return range(1, totalPages);\n    };\n\n    const {\n      totalRecords = null,\n      pageLimit = 30,\n      pageNeighbours: _pageNeighbours = 0,\n      sizing = \"\",\n      alignment = \"\"\n    } = props;\n    this.sizing = typeof sizing === \"string\" ? sizing : \"\";\n    this.alignment = typeof alignment === \"string\" ? alignment : \"\";\n    this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 30;\n    this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\n    this.pageNeighbours = typeof _pageNeighbours === \"number\" ? Math.max(0, Math.min(_pageNeighbours, 2)) : 0;\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n    this.state = {\n      currentPage: 1\n    };\n  }\n\n  componentDidMount() {\n    this.gotoPage(1);\n  }\n\n  render() {\n    if (!this.totalRecords) return null;\n    if (this.totalPages === 1) return null;\n    const {\n      currentPage\n    } = this.state;\n    const pages = this.fetchPageNumbers();\n    return /*#__PURE__*/React.createElement(\"nav\", {\n      \"aria-label\": \"Page navigation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: `pagination ${this.sizing} ${this.alignment}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, pages.map((page, index) => {\n      if (page === LEFT_PAGE) return /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        className: \"page-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"page-link\",\n        \"aria-label\": \"Previous\",\n        onClick: this.handleMoveLeft,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }\n      }, \"\\xAB\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"sr-only\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }\n      }, \"Previous\")));\n      if (page === RIGHT_PAGE) return /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        className: \"page-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"page-link\",\n        href: \"#!\",\n        \"aria-label\": \"Next\",\n        onClick: this.handleMoveRight,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }\n      }, \"\\xBB\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"sr-only\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }\n      }, \"Next\")));\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        className: `page-item${currentPage === page ? \" active\" : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"page-link\",\n        href: \"#!\",\n        onClick: e => this.handleClick(page, e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }\n      }, page));\n    })));\n  }\n\n}\n\nPaging.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  pageLimit: PropTypes.number,\n  pageNeighbours: PropTypes.number,\n  onPageChanged: PropTypes.func,\n  sizing: PropTypes.string\n};\nexport default Paging;","map":{"version":3,"sources":["/home/akshat/AirBlue/frontend/src/components/Paging.jsx"],"names":["React","Component","PropTypes","LEFT_PAGE","RIGHT_PAGE","range","from","to","step","i","push","Paging","constructor","props","gotoPage","page","onPageChanged","f","currentPage","Math","max","min","totalPages","paginationData","pageLimit","totalRecords","setState","handleClick","evt","preventDefault","handleMoveLeft","state","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","totalBlocks","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","pagesCount","length","singleSpillOffset","leftSpill","rightSpill","leftSpillPage","rightSpillPage","extraPages","sizing","alignment","ceil","componentDidMount","render","map","index","e","propTypes","number","isRequired","func","string"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst LEFT_PAGE = \"LEFT\";\nconst RIGHT_PAGE = \"RIGHT\";\n\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n};\n\nclass Paging extends Component {\n  constructor(props) {\n    super();\n    const {\n      totalRecords = null,\n      pageLimit = 30,\n      pageNeighbours = 0,\n      sizing = \"\",\n      alignment = \"\",\n    } = props;\n    this.sizing = typeof sizing === \"string\" ? sizing : \"\";\n    this.alignment = typeof alignment === \"string\" ? alignment : \"\";\n    this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 30;\n    this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\n\n    this.pageNeighbours =\n      typeof pageNeighbours === \"number\"\n        ? Math.max(0, Math.min(pageNeighbours, 2))\n        : 0;\n\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n\n    this.state = { currentPage: 1 };\n  }\n\n  componentDidMount() {\n    this.gotoPage(1);\n  }\n\n  gotoPage = (page) => {\n    const { onPageChanged = (f) => f } = this.props;\n\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\n\n    const paginationData = {\n      currentPage,\n      totalPages: this.totalPages,\n      pageLimit: this.pageLimit,\n      totalRecords: this.totalRecords,\n    };\n\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\n  };\n\n  handleClick = (page, evt) => {\n    evt.preventDefault();\n    this.gotoPage(page);\n  };\n\n  handleMoveLeft = (evt) => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage - this.pageNeighbours * 2 - 1);\n  };\n\n  handleMoveRight = (evt) => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage + this.pageNeighbours * 2 + 1);\n  };\n\n  fetchPageNumbers = () => {\n    const totalPages = this.totalPages;\n    const currentPage = this.state.currentPage;\n    const pageNeighbours = this.pageNeighbours;\n\n    const totalNumbers = this.pageNeighbours * 2 + 3;\n    const totalBlocks = totalNumbers + 2;\n\n    if (totalPages > totalBlocks) {\n      let pages = [];\n\n      const leftBound = currentPage - pageNeighbours;\n      const rightBound = currentPage + pageNeighbours;\n      const beforeLastPage = totalPages - 1;\n\n      const startPage = leftBound > 2 ? leftBound : 2;\n      const endPage = rightBound < beforeLastPage ? rightBound : beforeLastPage;\n\n      pages = range(startPage, endPage);\n\n      const pagesCount = pages.length;\n      const singleSpillOffset = totalNumbers - pagesCount - 1;\n\n      const leftSpill = startPage > 2;\n      const rightSpill = endPage < beforeLastPage;\n\n      const leftSpillPage = LEFT_PAGE;\n      const rightSpillPage = RIGHT_PAGE;\n\n      if (leftSpill && !rightSpill) {\n        const extraPages = range(startPage - singleSpillOffset, startPage - 1);\n        pages = [leftSpillPage, ...extraPages, ...pages];\n      } else if (!leftSpill && rightSpill) {\n        const extraPages = range(endPage + 1, endPage + singleSpillOffset);\n        pages = [...pages, ...extraPages, rightSpillPage];\n      } else if (leftSpill && rightSpill) {\n        pages = [leftSpillPage, ...pages, rightSpillPage];\n      }\n\n      return [1, ...pages, totalPages];\n    }\n\n    return range(1, totalPages);\n  };\n\n  render() {\n    if (!this.totalRecords) return null;\n\n    if (this.totalPages === 1) return null;\n\n    const { currentPage } = this.state;\n    const pages = this.fetchPageNumbers();\n\n    return (\n      <nav aria-label=\"Page navigation\">\n        <ul className={`pagination ${this.sizing} ${this.alignment}`}>\n          {pages.map((page, index) => {\n            if (page === LEFT_PAGE)\n              return (\n                <li key={index} className=\"page-item\">\n                  <button\n                    className=\"page-link\"\n                    aria-label=\"Previous\"\n                    onClick={this.handleMoveLeft}\n                  >\n                    <span aria-hidden=\"true\">&laquo;</span>\n                    <span className=\"sr-only\">Previous</span>\n                  </button>\n                </li>\n              );\n\n            if (page === RIGHT_PAGE)\n              return (\n                <li key={index} className=\"page-item\">\n                  <a\n                    className=\"page-link\"\n                    href=\"#!\"\n                    aria-label=\"Next\"\n                    onClick={this.handleMoveRight}\n                  >\n                    <span aria-hidden=\"true\">&raquo;</span>\n                    <span className=\"sr-only\">Next</span>\n                  </a>\n                </li>\n              );\n\n            return (\n              <li\n                key={index}\n                className={`page-item${currentPage === page ? \" active\" : \"\"}`}\n              >\n                <a\n                  className=\"page-link\"\n                  href=\"#!\"\n                  onClick={(e) => this.handleClick(page, e)}\n                >\n                  {page}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </nav>\n    );\n  }\n}\n\nPaging.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  pageLimit: PropTypes.number,\n  pageNeighbours: PropTypes.number,\n  onPageChanged: PropTypes.func,\n  sizing: PropTypes.string,\n};\n\nexport default Paging;\n"]},"metadata":{},"sourceType":"module"}