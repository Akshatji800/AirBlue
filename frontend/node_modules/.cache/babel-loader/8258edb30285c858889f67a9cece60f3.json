{"ast":null,"code":"var _jsxFileName = \"/home/akshat/AirBlue/frontend/src/helpers/renderFormTextArea.js\";\nimport React from \"react\";\n\nconst renderFormTextArea = props => {\n  const {\n    input,\n    label,\n    placeholder,\n    tips,\n    required,\n    meta: {\n      touched,\n      error,\n      warning\n    }\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: `form-label ${required ? \"required\" : \"\"}`,\n    htmlFor: input.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, label), /*#__PURE__*/React.createElement(\"textarea\", Object.assign({}, input, props, {\n    id: input.name,\n    className: \"form-control\",\n    placeholder: placeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  })), tips && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }\n  }, tips), touched && (error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 20\n    }\n  }, error) || warning && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 23\n    }\n  }, warning)));\n};\n\nexport default renderFormTextArea;","map":{"version":3,"sources":["/home/akshat/AirBlue/frontend/src/helpers/renderFormTextArea.js"],"names":["React","renderFormTextArea","props","input","label","placeholder","tips","required","meta","touched","error","warning","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AACpC,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA,QALI;AAMJC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB;AANF,MAOFT,KAPJ;AAQA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAG,cAAaK,QAAQ,GAAG,UAAH,GAAgB,EAAG,EADtD;AAEE,IAAA,OAAO,EAAEJ,KAAK,CAACS,IAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGR,KAJH,CADF,eAOE,kDACMD,KADN,EAEMD,KAFN;AAGE,IAAA,EAAE,EAAEC,KAAK,CAACS,IAHZ;AAIE,IAAA,SAAS,EAAC,cAJZ;AAKE,IAAA,WAAW,EAAEP,WALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAPF,EAcGC,IAAI,iBAAI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BA,IAA5B,CAdX,EAeGG,OAAO,KACJC,KAAK,iBAAI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,KAAnC,CAAV,IACEC,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,OAAP,CAFR,CAfV,CADF;AAqBD,CA9BD;;AA+BA,eAAeV,kBAAf","sourcesContent":["import React from \"react\";\nconst renderFormTextArea = (props) => {\n  const {\n    input,\n    label,\n    placeholder,\n    tips,\n    required,\n    meta: { touched, error, warning },\n  } = props;\n  return (\n    <React.Fragment>\n      <label\n        className={`form-label ${required ? \"required\" : \"\"}`}\n        htmlFor={input.name}\n      >\n        {label}\n      </label>\n      <textarea\n        {...input}\n        {...props}\n        id={input.name}\n        className=\"form-control\"\n        placeholder={placeholder}\n      />\n      {tips && <div className=\"form-text\">{tips}</div>}\n      {touched &&\n        ((error && <div className=\"invalid-feedback\">{error}</div>) ||\n          (warning && <span>{warning}</span>))}\n    </React.Fragment>\n  );\n};\nexport default renderFormTextArea;\n"]},"metadata":{},"sourceType":"module"}